name: General template tests

# Controls when the workflow will run
on:
  push:              # Triggers the workflow on push events
  workflow_dispatch: # trigger from command line
  workflow_call:     # manual trigger

jobs:
  CITests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - ORG: spe
            APP: nba
            ENV: dev
          - ORG: spe
            APP: prp
            ENV: dev
    env:
      PRODUCT: tpl-gen
      GITHUB_OWNER: Spectral-Engines
    steps:
      - name: Checkout itself
        uses: actions/checkout@v3
        with:
          path: /home/runner/work/${{ env.PRODUCT }}/${{ env.PRODUCT }}/opt/${{ matrix.org }}/infra-conf-generator

      - name: Checkout org-app-infra-conf
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GITHUB_OWNER }}/${{ matrix.org }}-${{ matrix.app }}-infra-conf
          path: /home/runner/work/${{ env.PRODUCT }}/${{ env.PRODUCT }}/opt/${{ matrix.org }}/${{ matrix.org }}-${{ matrix.app }}-infra-conf
          token: ${{ secrets.ALL_SPE_GITHUB_TOKEN }}

      - name: Builds infra-conf-generator container
        working-directory: /home/runner/work/${{ env.PRODUCT }}/${{ env.PRODUCT }}/opt/${{ matrix.org }}/infra-conf-generator
        run: |
          make clean-install-infra-conf-generator

      - name: Build infra-conf-validator
        working-directory: /home/runner/work/${{ env.PRODUCT }}/${{ env.PRODUCT }}/opt/${{ matrix.org }}/${{ matrix.org }}-${{ matrix.app }}-infra-conf
        run: |
          make clean-install-conf-validator

      - name: Test templates are being rendered
        working-directory: /home/runner/work/${{ env.PRODUCT }}/${{ env.PRODUCT }}/opt/${{ matrix.org }}/${{ matrix.org }}-${{ matrix.app }}-infra-conf
        run: |
          apt-get update && apt-get install -y yq
          errors=0
          while IFS= read -r step; do
            echo "START ::: verifying the $step step"
            rm -rf ./${{ matrix.APP }}/${{ matrix.ENV }}/tf/${STEP}*
            ORG=${{ matrix.ORG }} APP=${{ matrix.APP }} ENV=${{ matrix.ENV }} STEP=${step} make do-generate-conf-for-step
            ORG=${{ matrix.ORG }} APP=${{ matrix.APP }} ENV=${{ matrix.ENV }} STEP=${step} make do-generate-conf-for-${step}

            rendered_templates=$(ls -l ./${{ matrix.APP }}/${{ matrix.ENV }}/tf/${step}* | wc -l)
            if [[ rendered_templates > 0 ]]; then
              ls -l ./${{ matrix.APP }}/${{ matrix.ENV }}/tf/${step}*
            else
              errors=$((errors+1))
            fi
            echo "STOP  ::: verifying the $step step"
          done < <(cat ${{ matrix.APP }}/${{ matrix.ENV }}.env.yaml | yq -e '.env.steps | to_entries | .[].key')
          if [[ ${errors} > 0 ]]; then
            exit 1;
          else
            exit 0;
          fi

